{"version":3,"sources":["resources/images/icons/white.png","resources/images/icons/blue.png","resources/images/icons/yellow.png","resources/images/icons/green.png","resources/images/icons/red.png","resources/images/icons/special.png","atomics/containers/templates/Layout.jsx","atomics/components/atoms/images/image.jsx","atomics/components/atoms/battleIcons/icon.jsx","configs/icons.jsx","atomics/components/atoms/battleIcons/white.jsx","atomics/components/atoms/battleIcons/blue.jsx","atomics/components/atoms/battleIcons/yellow.jsx","atomics/components/atoms/battleIcons/green.jsx","atomics/components/atoms/battleIcons/red.jsx","atomics/components/atoms/battleIcons/special.jsx","atomics/components/atoms/battleIcons/destroy.jsx","atomics/containers/organisms/forms/dropIcons.jsx","configs/base.jsx","configs/norma.jsx","services/calculator.jsx","atomics/components/atoms/typographics/percentage.jsx","atomics/containers/organisms/tables/table.jsx","serviceWorker.js","index.js","atomics/containers/pages/Index.jsx"],"names":["module","exports","theme","global","font","family","size","height","AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Layout","Grommet","Heading","level","margin","title","children","defaultProps","Image","width","fit","white","default","loop","component","src","IconImage","blue","yellow","green","red","special","destroy","updateIcon","icons","setIcons","onChange","useState","open","setOpen","Fragment","DropButton","label","onOpen","onClose","dropAlign","top","dropContent","wrap","Object","keys","IconProperties","map","key","Icon","Button","icon","onClick","iconName","concat","border","bottom","index","Stack","anchor","Close","filter","n","i","removeIcon","Calculator","totalAdditionalPercentage","base","values","property","percent","reduce","p","value","getDestroyCount","length","destroyPercentage","norma","this","GlobalStyle","createGlobalStyle","point","number","parseFloat","color","Text","Digit","Math","floor","pow","styled","span","areases","name","start","end","NormaProperties","normaIndex","BaseProperties","baseIndex","flat","calcus","setCalcus","useEffect","Row","gridArea","Grid","fill","rows","columns","gap","areas","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3c08879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white.96988acd.png\";","module.exports = __webpack_public_path__ + \"static/media/blue.9e2ded3b.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow.019d1550.png\";","module.exports = __webpack_public_path__ + \"static/media/green.d7a58e31.png\";","module.exports = __webpack_public_path__ + \"static/media/red.62a68ed3.png\";","module.exports = __webpack_public_path__ + \"static/media/special.3d543c45.png\";","import React from 'react';\r\nimport { Box, Grommet, Heading } from 'grommet';\r\n\r\nconst theme = {\r\n    global: {\r\n        font: {\r\n            family: 'Roboto',\r\n            size: '14px',\r\n            height: '20px',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = props => (\r\n    <Box\r\n        tag={'header'}\r\n        direction={'row'}\r\n        align={'center'}\r\n        justify={'between'}\r\n        background={'brand'}\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        elevation={'medium'}\r\n        style={{ zIndex: '1' }}\r\n        { ...props }\r\n        />\r\n);\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <Grommet theme={ theme }>\r\n            <AppBar>\r\n                <Heading \r\n                    level={ 4 }\r\n                    margin={'xsmall'} >{ props.title }</Heading>\r\n            </AppBar>\r\n            <Box pad={'small'}>\r\n                { props.children }\r\n            </Box>\r\n        </Grommet>\r\n    )\r\n};\r\n\r\nLayout.defaultProps = {\r\n    title : 'Subject',\r\n};\r\n  \r\nexport default Layout;","import React from 'react';\r\nimport { Image } from 'grommet';\r\n\r\nexport default props => (\r\n    <Image\r\n        {...props}\r\n        />\r\n)","import React from 'react';\r\nimport { Box } from 'grommet';\r\nimport Image from '../images/image'\r\n\r\nexport default props => (\r\n    <Box\r\n        width={'64px'}\r\n        height={'64px'}\r\n        pad={'xxsmall'}\r\n        >\r\n        <Image\r\n            fit={'contain'}\r\n            {...props}\r\n            />\r\n    </Box>\r\n)","import { White, Blue, Yellow, Green, Red, Special, Destroy } from '../atomics/components/atoms/battleIcons';\r\n\r\nexport default {\r\n    white   : { default : 0.01, loop : 0.33, component : White },\r\n    blue    : { default : 0.06, loop : 0.50, component : Blue },\r\n    yellow  : { default : 0.06, loop : 0.66, component : Yellow },\r\n    green   : { default : 0.06, loop : 0.86, component : Green },\r\n    red     : { default : 0.06, loop : 0.95, component : Red },\r\n    special : { default : 0.06, loop : 0.99, component : Special },\r\n    destroy : { default : 0.00, loop : 0.00, component : Destroy },\r\n}","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/white.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/blue.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/yellow.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/green.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/red.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\nimport IconImage from '../../../../resources/images/icons/special.png';\r\n\r\nexport default () => (\r\n    <Icon src={ IconImage } />\r\n)","import React from 'react';\r\nimport Icon from './icon';\r\n\r\nexport default () => (\r\n    <Icon src={'http://placehold.jp/000000/ffffff/32x32.png'} />\r\n)","import React, { useState } from 'react';\r\nimport { DropButton, Box, Button, Stack } from 'grommet';\r\nimport { Close } from 'grommet-icons';\r\nimport IconProperties from '../../../../configs/icons';\r\n\r\nexport default props => {\r\n\r\n    const addIcon = iconName => {\r\n        setOpen(false);\r\n        updateIcon(icons.concat([ iconName ]));\r\n    }\r\n\r\n    const removeIcon = index => {\r\n        updateIcon(icons.filter((n, i) => i !== index));\r\n    };\r\n\r\n    const updateIcon = icons => {\r\n        setIcons(icons);\r\n        props.onChange(icons);\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [icons, setIcons] = useState(props.default || []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DropButton\r\n                label={'撃破率アイコンの追加'}\r\n                open={ open }\r\n                onOpen={() => setOpen(true)}\r\n                onClose={() => setOpen(false)}\r\n                dropAlign={{ top: 'bottom', right: 'right' }}\r\n                dropContent={\r\n                    <Box \r\n                        pad={'small'}\r\n                        background={'light-2'}\r\n                        direction={'row'}\r\n                        wrap={ true }\r\n                        >\r\n                        {Object.keys(IconProperties).map(key => {\r\n                            const Icon = IconProperties[key].component;\r\n                            return (\r\n                                <Button\r\n                                    key={ key }\r\n                                    icon={ <Icon /> }\r\n                                    onClick={() => addIcon( key )}\r\n                                    />\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                }\r\n                />\r\n\r\n            <Box\r\n                pad={'small'}\r\n                background={'light-3'}\r\n                border={'bottom'}\r\n                direction={'row'}\r\n                wrap={ true }\r\n                margin={{\r\n                    top : '20px',\r\n                    bottom: '20px',\r\n                }}\r\n                >\r\n                {icons.map((iconName, index) => {\r\n                    const Icon = IconProperties[iconName].component;\r\n\r\n                    return (\r\n                        <Stack\r\n                            pad={'small'}\r\n                            key={ index }\r\n                            anchor={'top-right'}\r\n                            >\r\n                            <Icon />\r\n                            <Close onClick={() => removeIcon(index)} />\r\n                        </Stack>\r\n                    )\r\n                })}\r\n            </Box>\r\n\r\n        </React.Fragment>\r\n    )\r\n};","export default [50, 60, 70, 80];","export default [1, 2, 3];","import IconProperties from '../configs//icons';\r\n\r\nexport default class Calculator {\r\n    constructor(icons) {\r\n        this.icons = icons;\r\n    }\r\n\r\n    totalAdditionalPercentage = base => {\r\n        const values = base + this.icons.map(iconName => {\r\n            const property = IconProperties[iconName];\r\n            const percent = property.default + ((1 / (1 - property.loop) - 1) * 0.01);\r\n            return percent >= 1 ? 1 : percent;\r\n        })\r\n        .reduce((p, value) => p + value, 0);\r\n        \r\n        return values >= 1 ? 0.999 : values;\r\n    };\r\n\r\n    getDestroyCount = () => {\r\n        return this.icons.filter(iconName => iconName === 'destroy').length;\r\n    };\r\n\r\n    destroyPercentage = (base, norma) => {\r\n        if (norma <= this.getDestroyCount()) {\r\n            return 1;\r\n        }\r\n        const prevDestroy = norma > 1 ? this.destroyPercentage(base, norma - 1) : 1;\r\n        return prevDestroy * this.totalAdditionalPercentage(base);\r\n    };\r\n};","import React from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Text } from 'grommet';\r\n\r\nconst GlobalStyle = createGlobalStyle`@import url('https://fonts.googleapis.com/css?family=Orbitron');`;\r\n\r\nexport default ({ children, point }) => {\r\n    const number = parseFloat(children);\r\n\r\n    let color = 'dark-1';\r\n    number >= 0.6 && (color = 'neutral-3');\r\n    number >= 0.7 && (color = 'neutral-1');\r\n    number >= 0.8 && (color = 'status-error');\r\n    number >= 0.9 && (color = 'neutral-2');\r\n\r\n    return (\r\n        <Text\r\n            color={ color }\r\n            >\r\n            <GlobalStyle />\r\n            <Digit>\r\n                { Math.floor(number * 100 * Math.pow(10, point || 0)) / Math.pow(10, point || 0) }%\r\n            </Digit>\r\n        </Text>\r\n    )\r\n}\r\n\r\nconst Digit = styled.span`\r\n    font-family: Orbitron;\r\n    font-weight: 900;\r\n`;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Grid, Box, Heading } from 'grommet';\r\n\r\nimport BaseProperties from '../../../../configs/base';\r\nimport NormaProperties from '../../../../configs/norma';\r\nimport Calculator from '../../../../services/calculator';\r\nimport Percentage from '../../../components/atoms/typographics/percentage';\r\n\r\nconst areases = [{\r\n    name: 'header',\r\n    start: [0, 0],\r\n    end: [NormaProperties.length, 0]\r\n}, {\r\n    name: 'b-header',\r\n    start: [0, 1],\r\n    end: [1, 1]\r\n}]\r\n.concat(NormaProperties.map((norma, normaIndex) => {\r\n    return [{\r\n        name: `h${ norma }-header`,\r\n        start: [normaIndex + 1, 1],\r\n        end: [normaIndex + 1, 1]\r\n    }];\r\n}))\r\n.concat(BaseProperties.map((base, baseIndex) => {\r\n    return [{\r\n        name: `b${ base }-subject`,\r\n        start: [0, baseIndex + 2],\r\n        end: [0, baseIndex + 2]\r\n    }].concat(NormaProperties.map((norma, normaIndex) => {\r\n        return {\r\n            name: `b${ base }-h${ norma }`,\r\n            start: [normaIndex + 1, baseIndex + 2],\r\n            end: [normaIndex + 1, baseIndex + 2]\r\n        };\r\n    }));\r\n}))\r\n.flat();\r\n\r\nexport default props => {\r\n    const [ calcus, setCalcus ] = useState(new Calculator(props.icons));\r\n\r\n    useEffect(() => {\r\n        setCalcus(new Calculator(props.icons));\r\n    }, [ props.icons ]);\r\n\r\n    const Row = ({ base }) => (\r\n        <Fragment>\r\n            <Box\r\n                gridArea={`b${ base }-subject`}\r\n                background={'light-4'}\r\n                justify={'center'}\r\n                align={'center'}\r\n                >\r\n                <Percentage>{ base / 100 }</Percentage>\r\n            </Box>\r\n            {NormaProperties.map(norma => (\r\n                <Box \r\n                    key={ norma }\r\n                    gridArea={`b${ base }-h${ norma }`}\r\n                    background={'light-1'}\r\n                    justify={'center'}\r\n                    align={'center'}\r\n                    >\r\n                    <Percentage>\r\n                        { calcus.destroyPercentage(base / 100, norma) }\r\n                    </Percentage>\r\n                </Box>\r\n            ))}\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                fill\r\n                rows={['xxsmall', 'xxsmall', 'xxsmall', 'xxsmall', 'xxsmall', 'xxsmall']}\r\n                columns={['flex', 'flex', 'flex', 'flex']}\r\n                gap={'xsmall'}\r\n                areas={ areases }\r\n                >\r\n\r\n                <Box \r\n                    gridArea={'header'}\r\n                    background={'brand'}\r\n                    justify={'center'}\r\n                    align={'center'}\r\n                    >\r\n                    <Heading level={ 5 }>撃破期待度早見表</Heading>\r\n                </Box>\r\n\r\n                <Box \r\n                    gridArea={'b-header'}\r\n                    background={'light-4'}\r\n                    justify={'center'}\r\n                    align={'center'}\r\n                    >\r\n                    <Heading level={ 6 }>初期撃破率</Heading>\r\n                </Box>\r\n\r\n                {NormaProperties.map(norma => (\r\n                    <Box \r\n                        key={ norma }\r\n                        gridArea={`h${ norma }-header`}\r\n                        background={'light-4'}\r\n                        justify={'center'}\r\n                        align={'center'}\r\n                        >\r\n                        <Heading level={ 6 }>{ norma }体目撃破率</Heading>\r\n                    </Box>\r\n                ))}\r\n\r\n                {BaseProperties.map(base => (\r\n                    <Row key={ base } base={ base } />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './atomics/containers/pages/Index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\r\n\r\nimport Layout from '../templates/Layout';\r\n\r\nimport DropIcons from '../organisms/forms/dropIcons';\r\nimport Tables from '../organisms/tables/table';\r\n\r\nexport default () => {\r\n    const [icons, setIcons] = useState(['white']);\r\n    // const [norma, setNorma] = useState(3);\r\n\r\n    return (\r\n        <Layout title={'リゼロ白鯨撃破シミュレータ'}>\r\n            <DropIcons \r\n                default={ icons }\r\n                onChange={icons => setIcons(icons)}\r\n                />\r\n\r\n            <Tables icons={ icons } />\r\n        </Layout>\r\n    )\r\n}"],"sourceRoot":""}